/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Enterprise;


import LoginPage.MyConnection;
import UserEnterprise.Travel;
import java.awt.Color;
import java.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yufei
 */
public class CreateTravel extends javax.swing.JFrame {

    /**
     * Creates new form CreateTravel
     */
    
    byte[] picture = null;
    String filename = null;
    Travel tl = new Travel();
    DefaultTableModel model;
 
    
    public CreateTravel() {
        initComponents();
        tl.fillInfoJtable(tblTravel, "");
        model = (DefaultTableModel)tblTravel.getModel();
        tblTravel.setRowHeight(40);
        tblTravel.setShowGrid(true);
        tblTravel.setGridColor(Color.ORANGE);
        tblTravel.setSelectionBackground(Color.BLACK);
        
        // Get organization
        try{
            
            Connection con = MyConnection.getConnection();
            Statement stm = con.createStatement();
            
            ResultSet rs = stm.executeQuery("SELECT `Oname`, `Ocity` FROM `OrganizationInfo` ");
            
            while(rs.next()){
                String Organization = rs.getString("Oname");
                jcxOrganization.addItem(Organization);
            }
            con.close();
        }
        catch(Exception ex){
            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        // get the Attraction
        try{
            
            Connection con = MyConnection.getConnection();
            Statement stm = con.createStatement();
            
            
            
//            ResultSet rs = stm.executeQuery("SELECT `Oattraction` FROM `OrganizationInfo`" );
            ResultSet rs = stm.executeQuery("Select `Oattraction` FROM OrganizationInfo where Oname = '" + jcxOrganization.getSelectedItem().toString() + "'");
            while(rs.next()){
                String Attraction = rs.getString("Oattraction");
                jcxAttraction.addItem(Attraction);
            }
            con.close();
        }
        catch(Exception ex){
            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        // get the city
//        try{
//            
//            Connection con = MyConnection.getConnection();
//            Statement stm = con.createStatement();
//            
//            
//            
//            ResultSet rs = stm.executeQuery("SELECT `Ocity` FROM OrganizationInfo where Oname = '" + jcxOrganization.getSelectedItem().toString() + "' " );
//            
//            while(rs.next()){
//                String City = rs.getString("Ocity");
//                jcxCity.addItem(City);
//            }
//            con.close();
//        }
//        catch(Exception ex){
//            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
//        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UpPanel = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblIcon = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        MidPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTravel = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        startDateChooser = new com.toedter.calendar.JDateChooser();
        endDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jcxOrganization = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetail = new javax.swing.JTextArea();
        txtLocation = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jcxType = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jcxCity = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jcxAttraction = new javax.swing.JComboBox<>();
        BotPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTravel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UpPanel.setBackground(new java.awt.Color(250, 115, 12));

        lblTitle.setBackground(new java.awt.Color(0, 102, 204));
        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create Travel");

        lblIcon.setSize(new java.awt.Dimension(40, 40));

        btnBack.setBackground(new java.awt.Color(250, 115, 12));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/back.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UpPanelLayout = new javax.swing.GroupLayout(UpPanel);
        UpPanel.setLayout(UpPanelLayout);
        UpPanelLayout.setHorizontalGroup(
            UpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnBack)
                .addGap(31, 31, 31)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(UpPanelLayout.createSequentialGroup()
                .addGap(366, 366, 366)
                .addComponent(lblIcon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UpPanelLayout.setVerticalGroup(
            UpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpPanelLayout.createSequentialGroup()
                .addGroup(UpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MidPanel.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Travel Name:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("City:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Organization:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Start Date:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("End Date:");

        txtTravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTravelActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Location:");

        jcxOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcxOrganizationActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ID:");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        txtDetail.setColumns(20);
        txtDetail.setRows(5);
        jScrollPane2.setViewportView(txtDetail);

        txtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Detail:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Type:");

        jcxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tour", "Restaurant", "Show", " ", " ", " " }));
        jcxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcxTypeActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 51, 255));
        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 51, 255));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 51, 255));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jcxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcxCityActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Cost:");

        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Attraction:");

        jcxAttraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcxAttractionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MidPanelLayout = new javax.swing.GroupLayout(MidPanel);
        MidPanel.setLayout(MidPanelLayout);
        MidPanelLayout.setHorizontalGroup(
            MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MidPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel15)
                    .addComponent(jLabel10)
                    .addComponent(jLabel4))
                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MidPanelLayout.createSequentialGroup()
                        .addGap(530, 530, 530)
                        .addComponent(btnSave)
                        .addGap(70, 70, 70)
                        .addComponent(btnUpdate)
                        .addGap(70, 70, 70)
                        .addComponent(btnDelete))
                    .addGroup(MidPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcxOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcxType, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MidPanelLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel6)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MidPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel9))))
                        .addGap(25, 25, 25)
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jcxAttraction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MidPanelLayout.createSequentialGroup()
                                .addComponent(txtTravel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel14))
                            .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        MidPanelLayout.setVerticalGroup(
            MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MidPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MidPanelLayout.createSequentialGroup()
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(txtTravel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jcxAttraction, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(30, 30, 30)
                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MidPanelLayout.createSequentialGroup()
                                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jcxOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel9))
                                    .addComponent(startDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jcxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel11)
                                        .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MidPanelLayout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel15)
                                            .addComponent(jcxType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(MidPanelLayout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(MidPanelLayout.createSequentialGroup()
                                .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jLabel6))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(MidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        tblTravel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Organization", "City", "Type", "Attraction", "Location", "Cost", "Price", "Travel Name", "Start Date", "End Date", "Detail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblTravel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTravelMouseClicked(evt);
            }
        });
        tblTravel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblTravelKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTravel);

        javax.swing.GroupLayout BotPanelLayout = new javax.swing.GroupLayout(BotPanel);
        BotPanel.setLayout(BotPanelLayout);
        BotPanelLayout.setHorizontalGroup(
            BotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );
        BotPanelLayout.setVerticalGroup(
            BotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MidPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BotPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(UpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(MidPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BotPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtTravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTravelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTravelActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void jcxOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcxOrganizationActionPerformed
        
        try{
            
            Connection con = MyConnection.getConnection();
            Statement stm = con.createStatement();
            
            ResultSet rs = stm.executeQuery("SELECT `Ocity` FROM OrganizationInfo where Oname = '" + jcxOrganization.getSelectedItem().toString() + "' " );
            
            jcxCity.removeAllItems();
            
            
            while(rs.next()){
                String City = rs.getString("Ocity");
                jcxCity.addItem(City);
            }
//            jcxCity.setSelectedItem(null);
            con.close();
        }
        catch(Exception ex){
            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jcxOrganizationActionPerformed

    private void txtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocationActionPerformed

    private void jcxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcxTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcxTypeActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        if (txtID.getText().equals("")||txtTravel.getText().equals("")||txtTravel.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter all data!");
        }
        else{

            long Travel_ID = Long.parseLong(txtID.getText());
            String Organization = jcxOrganization.getSelectedItem().toString();
            String City = jcxCity.getSelectedItem().toString();
            String Type = jcxType.getSelectedItem().toString();
            String Attaction = jcxAttraction.getSelectedItem().toString();
            String Location = txtLocation.getText();
            double Cost = Double.parseDouble(txtCost.getText());
            double Price = Double.parseDouble(txtPrice.getText());
            String Travel_Name = txtTravel.getText(); 
           
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String Start_Date = dateFormat.format(startDateChooser.getDate());
            String End_Date = dateFormat.format(endDateChooser.getDate());
            String Detail = txtDetail.getText();

            if(verifText()){

                Travel tl = new Travel();
                tl.AddUpdateDeleteEnterprise('u', Travel_ID, Organization, City, Type, Attaction, Location, Cost, Price, Travel_Name, Start_Date, End_Date, Detail);
                
                tblTravel.setModel(new DefaultTableModel(null,new Object[]{"ID","Organization","City","Type","Attaction","Location","Cost","Price","Travel Name","Start Date","End Date","Detail"}));
                tl.fillInfoJtable(tblTravel, "");

            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        if(txtID.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "No Travel Data Selected");
        }else{
            long Travel_ID = Long.parseLong(txtID.getText());
            tl.AddUpdateDeleteEnterprise('d', Travel_ID, null, null, null,null, null, 0, 0, null, null, null, null);
            tl.fillInfoJtable(tblTravel, "");
            tblTravel.setModel(new DefaultTableModel(null,new Object[]{"ID","Organization","City","Type","Attaction","Location","Cost","Price","Travel Name","Start Date","End Date","Detail"}));
            tl.fillInfoJtable(tblTravel, "");

            txtID.setText("");
            txtTravel.setText("");
            txtLocation.setText("");
            txtCost.setText("");
            txtPrice.setText("");
            txtLocation.setText("");
            txtPrice.setText("");
            txtDetail.setText("");
            startDateChooser.setDate(null);
            endDateChooser.setDate(null);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtID.getText().equals("")||txtTravel.getText().equals("")||txtTravel.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter all data!");
        }
        else{

            long Travel_ID = Long.parseLong(txtID.getText());
            String Organization = jcxOrganization.getSelectedItem().toString();
            String City = jcxCity.getSelectedItem().toString();
            String Type = jcxType.getSelectedItem().toString();
            String Attaction = jcxAttraction.getSelectedItem().toString();
            String Location = txtLocation.getText();
            double Cost = Double.parseDouble(txtCost.getText());
            double Price = Double.parseDouble(txtPrice.getText());
            String Travel_Name = txtTravel.getText(); 
           
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String Start_Date = dateFormat.format(startDateChooser.getDate());
            String End_Date = dateFormat.format(endDateChooser.getDate());
            String Detail = txtDetail.getText();

            if(verifText()){

                Travel tl = new Travel();
                tl.AddUpdateDeleteEnterprise('i', Travel_ID, Organization, City, Type, Attaction, Location, Cost, Price, Travel_Name, Start_Date, End_Date, Detail);
                
                tblTravel.setModel(new DefaultTableModel(null,new Object[]{"ID","Organization","City","Type","Attaction","Location","Cost","Price","Travel Name","Start Date","End Date","Detail"}));
                tl.fillInfoJtable(tblTravel, "");
//                tblEnterprise.setModel(new DefaultTableModel(null,new Object[]{"ID","Name","City","State","Zip code","Location","Start Date","End Date","Type","Price","Picture","Detail"}));
//                ep.fillJtable(tblEnterprise, "");
            }

            //            JOptionPane.showMessageDialog(this, "Save Successful!");

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    public boolean verifText(){
        
        if(txtID.getText().equals("") || txtTravel.getText().equals("") 
           || startDateChooser.getDate() == null || endDateChooser.getDate() == null
           || txtPrice.getText().equals("") || txtDetail.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "One Or More Empty Field!");
            return false;
        }
        // choose a date higher then the current date
        // || endDateChooser.getDate().compareTo(startDateChooser.getDate()) == 1
        else if(startDateChooser.getDate().compareTo(new Date()) < 0 || endDateChooser.getDate().compareTo(startDateChooser.getDate()) < 0){

            JOptionPane.showMessageDialog(null, "Please choose another date!");
            return false;
        }
        else{
            return true;
        }
        
    }
    
    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void jcxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcxCityActionPerformed
        
    }//GEN-LAST:event_jcxCityActionPerformed

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        try {
            // TODO add your handling code here:
            
            Connection con = MyConnection.getConnection();
            Statement stm = con.createStatement();
            
            ResultSet rs = stm.executeQuery("SELECT `Ocity` FROM OrganizationInfo where Oname = '" + jcxOrganization.getSelectedItem().toString() + "' " );
            
            jcxCity.removeAllItems();
            
            
            while(rs.next()){
                String City = rs.getString("Ocity");
                jcxCity.addItem(City);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateTravel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_txtCostActionPerformed

    
    int rowIndex;
    private void tblTravelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTravelMouseClicked
        // TODO add your handling code here:

        //        DefaultTableModel model = (DefaultTableModel)tblEnterprise.getModel();

        rowIndex = tblTravel.getSelectedRow();

        txtID.setText(model.getValueAt(rowIndex, 0).toString());
        jcxOrganization.setSelectedItem(model.getValueAt(rowIndex, 1).toString());
        jcxCity.setSelectedItem(model.getValueAt(rowIndex, 2).toString());
        jcxType.setSelectedItem(model.getValueAt(rowIndex, 3).toString());
        jcxAttraction.setSelectedItem(model.getValueAt(rowIndex, 4).toString());
        txtLocation.setText(model.getValueAt(rowIndex, 5).toString());
        txtCost.setText(model.getValueAt(rowIndex, 6).toString());
        txtPrice.setText(model.getValueAt(rowIndex, 7).toString());
        txtTravel.setText(model.getValueAt(rowIndex, 8).toString());
        
        txtDetail.setText(model.getValueAt(rowIndex, 11).toString());

        Date StartDate;
        Date EndDate;
        try {
            StartDate = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rowIndex, 9).toString());
            startDateChooser.setDate(StartDate);
            EndDate = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rowIndex, 10).toString());
            endDateChooser.setDate(EndDate);
        } catch (ParseException ex) {
            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
        }

        

    }//GEN-LAST:event_tblTravelMouseClicked

    private void tblTravelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblTravelKeyReleased
        // TODO add your handling code here
    }//GEN-LAST:event_tblTravelKeyReleased

    private void jcxAttractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcxAttractionActionPerformed
        // TODO add your handling code here:
        
        try{ 
            
            Connection con = MyConnection.getConnection();
            Statement stm = con.createStatement();
            
            ResultSet rs = stm.executeQuery("SELECT `OPrice`, `OLocation` FROM OrganizationInfo where OName = '" + jcxOrganization.getSelectedItem().toString() + "' AND OCity = '" + jcxCity.getSelectedItem().toString() + "' " );
            
            
            while(rs.next()){
                double Cost = rs.getDouble("OPrice");
                String Location = rs.getString("OLocation");
                txtCost.setText(String.valueOf(Cost));
                txtLocation.setText(Location);
            }
//            jcxCity.setSelectedItem(null);
            con.close();
        }
        catch(Exception ex){
            Logger.getLogger(Travel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jcxAttractionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTravel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTravel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTravel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTravel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateTravel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BotPanel;
    private javax.swing.JPanel MidPanel;
    private javax.swing.JPanel UpPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcxAttraction;
    private javax.swing.JComboBox<String> jcxCity;
    private javax.swing.JComboBox<String> jcxOrganization;
    private javax.swing.JComboBox<String> jcxType;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTitle;
    private com.toedter.calendar.JDateChooser startDateChooser;
    public static javax.swing.JTable tblTravel;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextArea txtDetail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtTravel;
    // End of variables declaration//GEN-END:variables
}
